package exam01;

public class Main {

	public static void main(String[] args) {
		/*
		 * 상속
		 * 	- 클래스의 재사용성을 높여 줄 수 있다.
		 *  - 클래스 간에 공통 코드를 작성하여 관리하기 때문에 코드의 추가 및 변경이 용이(유지보수가 쉬워진다.)
		 *  - 코드의 중복을 제거하여 프로그램의 생산성/유지 보수에 기여
		 *  
		 *  - 부모 클래스, 자식 클래스로 나뉘어서 사용하며, 이 때 자식 클래스가 부모 클래스를 상속해서 사용할 수 있다.
		 *  - 부모 클래스를 상속한 자식은 부모가 가지는 멤버 변수, 멤버 메서드, 생성자를 그대로 사용할 수 있다.
		 *  - 상속을 사용할 때 자식 클래스에서 extends 키워드로 부모 클래스를 지정하여 생성한다.
		 *  
		 *  - 부모 클래스에서 멤버 변수의 접근 제한자가 'private'일 때, 자식 클래스에서는 접근이 어렵다.
		 *  - 부모 클래스의 private 멤버 변수를 간접적으로 접근하기 위해 getter/setter를 활용해야 한다.
		 *  
		 *  - 클래스 간의 관계가 다중 상속보다 명확하고 신뢰성 있는 코드 작성
		 *  - 자바에서는 다중 상속 미지원 -> 단일 상속만 지원
		 *  
		 *  1. 부모 / 자식 간의 관계를 표현할 때 사용
		 *     상위 / 하위 개념 관계를 표현할 때 사용
		 *  2. 부모의 멤버 변수, 메서드는 자식이 그대로 사용 가능
		 *     단, 자식은 오버라이드 기능을 사용하여 부모의 메서드를 재정의하여 사용 가능
		 *  3. 생성자는 상속 안됨
		 *  4. 자식 클래스에서 부모 클래스의 메서드를 사용하기 위해서 super 키워드를 사용
		 *  5. 모든 객체는 최상위 클래스인 Object의 자식이고,
		 *     그래서 모든 클래스는 toString(), equals() 메서드를 사용할 수 있다.   
		 */
		
		/*
		 *  오버라이딩(Overriding)
		 *   - 부모가 가지고 있던 기존의 기능을 자식 클래스에서 재정의하여 사용할 수 있다.
		 *   - 자식에 정의된 메서드를 우선 사용을 하며, 부모에 정의된 메서드를 사용하기 위해서 super 키워드를 사용해야 한다.
		 *   - 성립 조건
		 *    	1. 메소드 이름이 같아야 한다.
		 *    	2. 매개변수 타입, 갯수가 동일해야 한다.
		 *    	3. 리턴 타입이 동일해야 한다.
		 *   - private 접근 제한자와 final 키워드가 사용된 경우는 오버라이딩이 불가능하다.
		 */
		
		Child child = new Child();
		
		child.printNumber();

	}
}
